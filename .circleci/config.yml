version: 2

references:
  setup_environment: &setup_environment
    run:
      name: Setup Environment
      command: |
        echo 'export CI_SHA1=$CIRCLE_SHA1' >> ${BASH_ENV}
        echo 'Install AWS CLI'
        pip install awscli
        echo 'Install needed packages'
        apk --update add bash jq
        git config --global user.email "circleci-noreply@fairwinds.com"
        git config --global user.name "CircleCI Pipeline"

jobs:
  lint-scripts:
    docker:
      - image: koalaman/shellcheck-alpine:v0.6.0
    steps:
      - checkout
      - run:
          name: lint
          command: |
            for script in $(ls scripts/*.sh); do
                shellcheck -x $script
            done
  lint-charts:
    docker:
      - image: quay.io/helmpack/chart-testing:v2.2.0
    steps:
      - checkout
      - *setup_environment
      - run:
          name: lint
          command: |
            git remote add ro https://github.com/fairwindsops/charts
            git fetch ro master
            ct lint --config scripts/ct.yaml  --chart-yaml-schema scripts/schema.yaml
  e2e-tests:
    docker:
      - image: quay.io/helmpack/chart-testing:v2.2.0
    steps:
      - checkout
      - setup_remote_docker
      - *setup_environment
      - run:
          name: Install Docker
          command: apk --update add docker
      - run:
          name: Setup e2e Environment
          command: |
            curl -LO https://github.com/kubernetes-sigs/kind/releases/download/0.2.1/kind-linux-amd64
            chmod +x kind-linux-amd64
            mv kind-linux-amd64 /usr/local/bin/kind
            scripts/e2e-test.sh setup
      - run:
          name: Run e2e tests
          command: |
            scripts/e2e-test.sh test "$CIRCLE_BRANCH"
      - run:
          name: Teardown e2e Environment
          command: scripts/e2e-test.sh teardown
  sync:
    docker:
      - image: quay.io/helmpack/chart-testing:v2.2.0
    steps:
      - checkout
      - *setup_environment
      - run:
          name: sync
          command: scripts/repo-sync.sh
      - run:
          name: sync-fw
          command: scripts/repo-sync-fw.sh
  autotagger:
    docker:
      - image: quay.io/helmpack/chart-testing:v2.2.0
    steps:
      - run:
          name: Setup yq
          command: |
            wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
            chmod 0755 /usr/local/bin/yq
      - checkout
      - *setup_environment
      - run:
          name: Tag Charts which don't have tags
          command: >
            find . -iname Chart.yaml |
            xargs -I {} yq read {} -j |
            jq '.name+"-"+.version' -r |
            xargs -n 1 -I {} bash -c '
            if git tag | grep {} > /dev/null 2>&1; then
            echo already exists;
            else
            git tag {} -am Chart\ version\ {} ;
            fi'
      - run:
          name: List and Push Tags
          command: |
            apk add util-linux > /dev/null 2>&1
            git tag -l --format="%(refname) %% %(subject) %% %(taggerdate)" | column -t -s%
workflows:
  version: 2
  test-and-sync:
    jobs:
      - lint-scripts
      - lint-charts
      - e2e-tests:
          filters:
            branches:
              ignore:
                - master
          requires:
            - lint-scripts
            - lint-charts
      - sync:
          requires:
            - lint-scripts
            - lint-charts
          filters:
            branches:
              only:
                - master
      - autotagger:
          # requires:
          #   - e2e-tests
          #   - sync
          filters:
            branches:
              only:
                - autotagging-charts
